#+BEGIN_HTML
---
layout: post
title: "virtualenv 使用方法"
date: 2014-11-24 11:45:20 +0800
comments: true
categories: 
---
#+END_HTML

* python环境搭建
** ubuntu 系统下的搭建
   - apt软件包的安装
     #+BEGIN_EXAMPLE
     sudo aptitude -y update
     sudo aptitude -y upgrade
     sudo aptitude -y install build-essential libsqlite3-dev libreadline6-dev
     sudo aptitude -y install libgdbm-dev zlib1g-dev libz2-dev sqlite3 tk-dev
     sudo aptitude -y instal zip
     #+END_EXAMPLE
   - python 相关包的安装
     #+BEGIN_EXAMPLE
     sudo aptitude -y install python-dev
     distribute包的安装（该工具是支持python模块的构建与导入的工具包，使用apt也能安装，
     但版本可能比较旧）
     使用源码安装：
     wget http://python-distribute.org/distribute_setup.py
     sudo python distribute_setup.py
     
     pip的安装：
     pip的安装可以使用easy_install
     从pypi安装功能包和模块时可以使用easy_install和pip
     使用命令安装pip：
     wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py
     sudo python get-pip.py
     确认pip安装完成: pip --version
     #+END_EXAMPLE
* virtualenv的安装
** virtualenv的安装
   + 使用pip安装(推荐)
     #+BEGIN_EXAMPLE
     使用pip安装： pip install virtualenv
     #+END_EXAMPLE
   + 使用源码安装
     #+BEGIN_EXAMPLE
     curl -O https://pypi.python.org/packages/source/v/virtualenv/virtualenv-x-x.tar.gz
     cd virtualenv-x-x.tar.gz && sudo python setup.py install
     //非全局安装
     python virtualenv.py myve
     #+END_EXAMPLE
   + 使用包管理器安装
     + ubuntu
       #+BEGIN_EXAMPLE
       sudo aptitude install python-virtualenv python-pip
       #+END_EXAMPLE
     + centos
       #+BEGIN_EXAMPLE
       sudo yum install python-virtualenv python-pip
       #+END_EXAMPLE
** virutalenv使用方法
   + 确认已经安装好的所有包的版本信息
     pip freeze
   + 创建virtualenv
     #+BEGIN_EXAMPLE
     virtualenv env: 创建env环境目录， 会在当前目录下创建env目录， 并且安装了env/bin/python,
     创建lib,bin,include,local目录以及安装pip，在env目录下，安装的python库都会放入env/lib下
     而且默认的python是env/bin/python,包括写在python程序中的#!/usr/bin/env python
     #+END_EXAMPLE
   + 激活virtualenv
     #+BEGIN_EXAMPLE
     cd env
     source ./bin/activate
     使用pip安装软件
     pip freeze > requirements.txt // 生成requirements.txt文件
     pip install -r requirements.txt // 根据requirements.txt生成相同的环境
     #+END_EXAMPLE
** 最佳实践
   - 指定python版本
     #+BEGIN_EXAMPLE
     virtualenv -p /usr/bin/python3.4 env3.4
     virtualenv --python=/python/path env
     #+END_EXAMPLE
   - 生成可打包环境
     在某些特殊情况下，可能没有网络，期望直接打包一个env，可以在解压后直接使用
     此时可以使用virtualenv --relocatable指令将一个env修改为可更改位置的env
     virtualenv --relocatable ./ ，执行该命令后，将当前env相关的可执行文件都
     被修改为相对路径，可以打包当前目录，上传到其他位置直接使用
** virtualenv的bootstrap脚本
   http://blogs.360.cn/blog/how-360-uses-python-1-virtualenv/
